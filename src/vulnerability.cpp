#include "vulnerability.h"
#include <fstream>
#include <sstream>

void VulnerabilityChecker::loadSignatures(const std::string& filePath) {
    std::ifstream file(filePath);
    std::string line;
    while (std::getline(file, line)) {
        size_t pos = line.find(':');
        if (pos != std::string::npos) {
            std::string service = line.substr(0, pos);
            std::string vuln = line.substr(pos + 1);
            vulnSignatures[service] = vuln;
        }
    }
}

std::string VulnerabilityChecker::checkVulnerability(int port, const std::string& service) {
    // Simple vulnerability mapping
    if (vulnSignatures.find(service) != vulnSignatures.end()) {
        return "Potential vulnerability: " + vulnSignatures[service];
    }
    return "No known vulnerabilities detected";
}